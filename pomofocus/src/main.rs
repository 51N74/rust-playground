use std::time::Duration;
use std::thread::sleep;
use std::io;

fn main() {
    
    let short_break = 5 * 60; // ‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏ß‡∏•‡∏≤
    let long_break = 15 * 60; // ‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏ß‡∏•‡∏≤ 
    let mut cycles = 0; // ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏≠‡∏ö‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
    
    loop {
        
            println!("Please type 'start' to begin the Pomodoro session or type 'exit' to exit the Pomodoro Program.");
            
            let mut input = String::new();
            io::stdin().read_line(&mut input).expect("Failed to read line");
            let input = input.trim(); // ‡∏•‡∏ö‡∏ä‡πà‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏á
            if input != "start" && input != "exit" { // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà start ‡∏´‡∏£‡∏∑‡∏≠ exit
                println!("Invalid input. Please type 'start' to begin the Pomodoro session.");
                continue; // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡πÉ‡∏´‡πâ‡∏ß‡∏ô‡∏•‡∏π‡∏õ‡πÉ‡∏´‡∏°‡πà
            }else if input == "exit"{
                println!("Exiting the program.");
                break; // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô exit ‡πÉ‡∏´‡πâ‡∏´‡∏¢‡∏∏‡∏î‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°
            }

        start_pomodoro(cycles); // ‡πÄ‡∏£‡∏¥‡πà‡∏° Pomodoro

        cycles += 1; // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏≠‡∏ö
        if cycles % 4 == 0 && cycles != 0 {
            println!("üõë Time for a long break! {} minutes", long_break);
            for i in (1..=long_break).rev() {
                println!("‚è∞ Remaining: {} seconds", i);
                sleep(Duration::from_secs(1)); // ‡∏´‡∏ô‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤ 1 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
            }
        } else {
            println!("üõë Time for a short break! {} minutes", short_break);
            for i in (1..=short_break).rev() {
                println!("‚è∞ Remaining: {} seconds", i);
                sleep(Duration::from_secs(1)); // ‡∏´‡∏ô‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤ 1 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
            }
        }
        
        println!("üçÖ Pomodoro session {} completed!", cycles); // ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô Pomodoro

        if cycles >= 16 { // ‡∏ñ‡πâ‡∏≤‡∏ú‡πà‡∏≤‡∏ô 8 ‡∏£‡∏≠‡∏ö‡πÉ‡∏´‡πâ‡∏´‡∏¢‡∏∏‡∏î
            println!("üéâ Congratulations! You've completed 8 Pomodoro sessions!");
            break;
        }
    }

}

fn start_pomodoro(c:i32)->i32 {

    let countdown = 25 * 60; // ‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏ß‡∏•‡∏≤ 25 min
    println!("üçÖ Pomodoro session {} started!", c+1); // ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏° Pomodoro
    for i in (1..=countdown).rev() {
        println!("‚è∞ Remaining: {} seconds", i);
        sleep(Duration::from_secs(1)); // ‡∏´‡∏ô‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤ 1 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
    }
   
    return c

}
   
